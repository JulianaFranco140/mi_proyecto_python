# GitHub Actions workflow para proyecto Python simple
name: Python CI - Calculadora Simple

# Cuándo ejecutar el workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Trabajos a ejecutar
jobs:
  test:
    name: Pruebas y Análisis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    # Paso 1: Descargar el código
    - name: Checkout código
      uses: actions/checkout@v4
    
    # Paso 2: Configurar Python
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Paso 3: Instalar dependencias
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    # Paso 4: Análisis de código con flake8
    - name: Análisis de código con flake8
      run: |
        # Verificar errores de sintaxis y nombres indefinidos
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Verificar estilo de código (más permisivo para el ejemplo)
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    # Paso 5: Ejecutar pruebas
    - name: Ejecutar pruebas con pytest
      run: |
        pytest tests/ --cov=src/ --cov-report=xml --cov-report=html --cov-report=term
    
    # Paso 6: Subir reporte de cobertura
    - name: Subir reporte de cobertura
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-python-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 7

  security:
    name: Escaneo de Seguridad
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Instalar herramientas de seguridad
      run: |
        pip install bandit safety
    
    - name: Escaneo con Bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/
    
    - name: Verificar dependencias con Safety
      run: |
        safety check
    
    - name: Subir reportes de seguridad
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: bandit-report.json
